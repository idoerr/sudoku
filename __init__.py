
from gui.sudoku import SudokuApp
import cProfile
import model.solver
from model.board import Board
import time

def run_program():

    board_str = [
    # '004000000500003600632418000907024003041607290200930401000361527003700008000000100'
    # '704000100000200309050016002872090000000000000000050918500480020207009000003000405'
    # '004000029,006100007,072093000,089000003,000020000,600000540,000930810,100004900,790000400'
    # '050600004,080091000,031000800,000047002,200000001,300920000,003000160,000580040,500006070'
    # '600800000,009000170,070000060,091007005,700040002,800500790,060000010,014000800,000005004'
    # '000300250,000060003,820500400,000850009,705000602,400027000,006009081,900030000,071005000'
    # '000004300,003000056,950700001,008020070,006090500,020070900,200008035,580000200,004500000'
    # '040002000,020003700,006000500,060090014,000040000,870010030,008000600,005100080,000800070'
    # '080903400,000720300,000000790,300000052,000000000,670000003,068000000,002059000,004802060'
    # '708039000,006000030,000200090,500040100,000706000,002050007,060008000,030000200,000170405'
    # '000001340,485000000,001089000,000500709,200000001,709004000,000920800,000000567,036700000'

    # '060030009,730000051,500008000,100062000,009000700,000970005,000300004,410000076,800050010'
    # '000400650,000087031,004500000,710000903,000000000,305000028,000001700,280970000,073005000'
    # '000001340,485000000,001089000,000500709,200000001,709004000,000920800,000000567,036700000',
    '800000000,003600000,070090200,050007000,000045700,000100030,001000068,008500010,090000400' # Unsolved
    #'000090640,000003007,004107008,190800400,040030080,005004069,400306200,500200000,021050000'
    ]

    board_str = board_str[0]
    #board, init_actions = model.board.create_board_from_string(board_str)

    #s = Solver(board, init_actions, False)

    #s.solve()


    SudokuApp(board_str).run()


def generate_puzzle():

    start = time.time()

    initial_actions = None

    while initial_actions is None:
        print('k')
        initial_actions = model.solver.generate()

    board = Board(9)
    board = board.apply_actions(initial_actions)

    board_str = str(board)
    print(board_str)
    print(time.time() - start)
    SudokuApp(board_str).run()


if __name__ == '__main__':
    #cProfile.run("run_program()")
    #run_program()
    generate_puzzle()